Modern replacement for pps
---
If your favorite programming editor has an addon called 'external tools' it can be easily integrated into tinyC. My editor is gedit. With the addon 'external tools' with a bit of integration is an excellent editing environment for tiny-c. It replaces the classical pps (program preparation system of 1977, a simple line oriented editor current which was fine in its day.
Other editors have 'external tools' or the equivalent, so check if your favorite has the ability to run external scripts. In fact my browsing around found the term 'external tools' a lot, eclipse for example, but others. So you are not tied down to gedit for this technique.
That said, gedit is libre-ware, and is available on windows and apple. Here I describe the very simple steps I used to integrate tinyC into this editor on linux.
ADVANTAGES: 
    - editing a tiny c program, a test run is made by hitting a hot key of your choice. I use ctrl-shift-T (for test). Your edited program is saved, run, your edit window divides into two panes and the outputs show in the bottom pane. Hit the X to go back to one pane, or just leave it that way. Your choice.
    - you do not need a separate command window, ONE INTEGRATED ENVIRONMENT.
MY SETUP:
    - install the 'external tools' addon in your favorite editor.
    - my editors menu (yours may vary):
        -> tools -> manage external tools
        -> new tools button (little box with + in lower left corner)
            ==>> new tool popup -> give it a name
            -> fill in a script (sh, bash, python, ...) [bash sample below]
        -> make other choices
            [I chose to save the current file, and a got key]
        -> close
That's all. Those steps integrated my installed tinyC into 
My script:            
    #!/bin/sh
    file=$GEDIT_CURRENT_DOCUMENT_PATH
    echo running $file
    /usr/local/bin/tinyC $file
