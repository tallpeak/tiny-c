
// convert a string of digits (without leading sign) to an int, returning the
// result in v. Note v is a pointer to the int. The number of digits examined
// is returned. Either a non digit, or the 11th stops the conversion.
num char b(0); int v(0) [
 int k
 v(0)=0
 while (k<10) [
  if( (b(k)<'0') + (b(k)>'9') ) break;
  v(0) = 10*v(0) + b(k)-'0'
  k = k+1
  ]
 return k;
 ]

// like num, but includes an optional leading blanks and sign
atoi char b(0); int v(0) [
 int k,s
 char c
 s=1
 c=b(0)
 while ((c==' ')+(c=='-')+(c=='+')) [
  if(c=='-') s = -1
  c = b(k=k+1)
  ]
 k = k+num(b+k,v)
 v(0) = s*v(0)
 return k
 ]

// Read a line from the terminal into buffer as a string
gs char q(0) [ // mod's by Ed Davis
 int x
 x=0
 while( (q(x)=MC(2))!=10 ) [
  if (q(x)==13) break
  if(q(x)==24) [x=0; printf "%c",10]
  else if(q(x)==127) [if(x>0)x=x-1]
  else x=x+1
  ]
 q(x)=0
 printf "%c",10
 return x
 ]

// get a number from the terminal. Insist on it!
gn [
 char b(20)
 int v(0)
 while(1) [
  gs b
  if(atoi(b,v)) return v(0)
  ps "number required "
  ]
 ]

printf char fmt(0); ... [
 MC 101
 ]

// put a null terminated string
ps char b(0) [
 MC "%s",b,101
 ]

strcat char a(0),b(0) [
 return MC a,b,105
 ]

strcpy char a(0),b(0) [
 return MC a,b,106
 ]

strlen char s(0) [
 return MC s,104
 ]

// put a null terminated string as a new line
// pl char b(0) [
// MC "%c%s",10,b,101
// ]

// Get a character from the terminal
getchar [
 return gc
 ]

// Reads a line, returns the first character
gc [
 return MC 2
 ]

// display proper fraction
dpfx int n,d,p [
 if p [MC 10*n/d,14;dpfx 10*n%d,d,p-1]
 ]

// dpfx helper function
dpf int n,d,p [
 MC '.',1
 dpfx n,d,p
 ]

color char c [
 MC '\'-'A',1;MC '\'-1,1;MC '3',1;MC c,1;MC 'm',1
 ]

posc int r,c [
 int R,C;R=25;C=80
 if((r>=1)*(r<=R)*(c>=1)*(c<=C)==0)return 1
 MC '\'-'A',1;MC '\'-1,1;pos r;MC ';',1;pos c;MC 'H',1;return 0
 ]

pos int rc [
 if(rc>9) [MC rc/10+48,1;rc=rc%10]
 MC rc+48,1
 ]

hilo char c [
 MC '\'-'A',1;MC '\'-1,1;MC c,1;MC 'm',1
 ]

oo char hs [
 MC '\'-'A',1;MC '\'-1,1;MC '?',1;MC '2',1;MC '5',1
 MC hs,1
 ]

on [oo 'h']

off [oo 'l']

sak [
 printf "%cStrike any key ... ",10
 char ch
 ch=getchar()
 return(ch);
 ]

tolower char s(0) [
 int i
 while(i<strlen(s)) [
  if((s(i)>='A')*(s(i)<='Z'))s(i)=s(i)+' '
  i=i+1
  ]
 ]

toupper char s(0) [
 int i
 while(i<strlen(s)) [
  if((s(i)>='a')*(s(i)<='z'))s(i)=s(i)-' '
  i=i+1
  ]
 ]

// quiet exit
abort [MC 109]

mcver [
 return MC 201
 ]

help char h(0) [
 char url(50)
 strcpy url,"http://primepuzzle.com/tc/tchelp."
 strcat url,h
 strcat url,".txt" 
 printf "%cPlease visit %s",10,url
 ]

mylibver [printf "%cmylib version 1.4",10]

// finds the leftmost copy IN [s1..s1+n1] OF [s2..s2+n2] (memory blocks,
// left inclusive, right exclusive) returning false (0) if no match, else
// the index of the first match character starting with 1 (one).
index char s1(0); int n1; char s2(0); int n2 [
	if(n2<=0)return 1;   // null matches beginning of s1 even if s1 is empty
	if(n1<=0)return 0;   // s1 empty
	int a, d(0)
	while( a+n2 <= n1) [
		d(0)=1
		a = a+1+scann(s1+a, s1+n1-n2, s2(0), d )
		if(d(0))return 0
		if(ceqn( s1+a, s2+1, n2-1 ))return a
	]
]

// scan from 'from' to 'to' for character 'c', decrementing n(0) each 'c' found.
// The scan stops if n(0) is decremented to 0, or when 'to' is reached
// and examined. Returns the offset from 'from' to the last character examined.
scann char from(0), to(0), c; int n(0) [
	return MC(from, to, c, n, 9)
]

// Read file name into buff of length len returning number of bytes read.
readfile char name(0), buff(0); int len [
 return MC name, buff, len, 103
 ]

writefile char name(0), buff(0); int len [
 return MC name, buff, len, 107
]

// compare two strings for equality, returning true if equal, else false.
// Only the first n characters are considered.
ceqn char a(0), b(0); int n [
 int k
 k = -1
 while((k=k+1)<n) [
  if(a(k)!=b(k)) return 0
  ]
 return 1
 ]

url int n; char u(0) [
 if n==0 strcpy u,"http://tinyurl.com/programmersguide"
 if n==1 strcpy u,"http://primepuzzle.com/tom-gibson/tiny-c-master/mylib.tc"
 if n==2 strcpy u,"http://primepuzzle.com/tom-gibson/tiny-c-master/pps/library.tc"
 if n==3 strcpy u,"http://primepuzzle.com/tc"
 return u
 ]

