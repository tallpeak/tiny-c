mat_trek.notes

// from trek.tc...
/* The galaxy consists of 64 quadrants in an 8 by 8 array.  Each
/* quadrant consists of 64 sectors in an 8 by 8 array.  nts).

 The galaxy is really a 4 dimensional array.
 And from my notes (SamplePrograms/trek_comments.txt)...
		current sector. Value is object code
		object codes: 0 .  1 K   2 B   3 *   4 E
			(nothing,klingon,base,star,Enterprise)
	u,v,x,y are E's position, quad up over, sect up over

To avoid confusion I will use the term "cell_code" instead of "object codes".
Each cell has a 3 digit code showing what is in the cell. (Maybe 4 digits, I'm
still studying the code.)

Notation for a cell:   
	current_quadrant = mat_val(2,7,quads)
	cell_code = mat_val(3,6,current_quadrant)
Collapsing the above notation into one line, and using 
convenience notation...
	 cell_code = mv(3,6,mv(2,7,q))
So 65 arrays, each 8x8. And the values in quads are pointers
to the 64 sector arrays, the cell values in those are the ultimate
data, each a 3 digit code.
------
Status (Jun 5):
	matrix.tc has elements of a lib and of an Sa*/mat_test.tc.
	mat_trek.tc is not a program, but has thoughts on a 4 dimension test.
	Experiments folder has mat_trek.notes (this file)

Next:
	Pull all files into Experiments
x		matrix.tc
x		mat_trek.tc
x	Rename array2d, etc.
x		files
x		code			mat_  -->  ar2d_
x	Divide matrix.tc into its two parts
x		array2d.tc
x		testArray2d.tc
x	Decide how to handle the convenience code.
x		Leave in the test file as ms,mv,mp. Its a convenience technique, not
x		a deliverable library code.
x	Study two notes files and decide which to save and where
x		This file: kind of a log
x		ar4d: thoughts leading to 4d notation, plus suggested coding for 4d test
x		KEEP both in Ex* for now.
Above finished Jun 6 '20
----------
	put 2d stuff in 
		pps 
		Sa*
	COMMIT
	Code,run,commit a small size 3d and 4d tests.
		testArray3d.tc
		testArray4d.tc
Getting lots of subscript issues. Need built in help.
	all fcns should call bad.
---------
Monday, Jun 8, 2020
tc Ex*/ar4d.tc -q
test all
m 13620556
SIZEofINT is 4
test1
create_sector  0 0 at 13620600
created, galaxy portion: 
 13620600 3 4 | 5 6 7 | 8 9 10   <<==  good. This is JUST the array
---------
Tuesday, Jun 9
Goal: print sector 0,0
		created, galaxy portion: 
		 27776364 3 4 | 5 6 7 | 8 9 10
		sector 0 0:  13 14 15 | 16 17 18 | 19 20 21   <<==  good
x	more sectors
x	remove the dumps
x	fill each sector with unique id: 10*sx+sy
x	remove initial hard fill
x	split ar4d into lib/test files
x	galaxy should use index, not m+index for its data making it address independant
STATUS: creating gallaxy and its sectors.
TODO: 
x	4d data setters/getters
x	test2: setter/getter
x	test2: print using trek format
	m must be a param everywhere, like mat in 2d
	move stuff to Sa*/pps
	commit/push
	document
	email to Lee
----------
Wed, Jun 10
create galaxy should create a separate 2d just for galaxy data
