// The arg mat must have size at least 2+rows+cols.
ar2d_setup int rows, cols, mat(0) [
	mat(0) = rows
	mat(1) = cols
]

ar2d_fill int f,mat(0)[
	int end; end = 2 + mat(0)*mat(1)
	int i; i=1; while((i=i+1)<end)mat(i)=f
]
ar2d_zap int mat(0)[ar2d_fill(0,mat)]

// set value of mat(r,c)
ar2d_set int x,r,c,mat(0) [
	int cell
	cell = ar2d_cell(r,c,mat)
	mat(cell)=x
	if(ar2d_bad(r,c,mat))return -999999;
	return x
]

// return value of mat(r,c), else huge negative
ar2d_val int r,c,mat(0) [
	if(ar2d_bad(r,c,mat))return -999999;
	return mat(2+c+r*mat(1))
]

ar2d_print int mat(0)[
	int rows,cols,r,c
	rows=mat(0); cols=mat(1)
	while(r<rows)[
		if(r)ps " |"
		while(c<cols)[ 
			pn ar2d_val(r,c,mat)
			c=c+1
		]
		r=r+1
		c=0
	]
]

// returns index into array of cell r,c, else -1 if invalid
ar2d_cell int r,c,mat(0) [
	if(ar2d_bad(r,c,mat))return -1
	return 2+c+r*mat(1)
]

// returns true if either c or r are invalid
ar2d_bad int r,c,mat(0) [
	if(c<0) return 1
	if(c>=mat(1)) return 1
	if(r<0) return 1
	if(r>=mat(0)) return 1
	return 0
]
