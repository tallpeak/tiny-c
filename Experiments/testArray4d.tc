#include TryIt/Experiments/array2d.tc
#include TryIt/Experiments/array4d.tc
#include pps/library.tc

int S
int m(110)
int SIZEofINT

// raw dump uses minimal ar4d code
// dump 0 shows galaxy portion of array, >0 shows quadrant 1 up to S squared
ar4d_dump int i[
	int size, begin
	pl"matrix dump";pn i;
	if(i>S*S)[ps" no sector";pn i;exit]
	ps" m is";pn m
	size=S*S+2
	begin = sector_index(i-1,0)
	ps": cells at";pn(begin)
	pl""
	i=begin-1
	while(i<begin+size-1)pn(m(i=i+1))
]

// cute trick here, but it works
set_SIZEofINT [
	m(1)=9
	char x(0)
	x=m
	int i
	i=-1
	while(i<10)if(x(i=i+1)==9)[
		SIZEofINT = i
		pl"SIZEofINT is";pn i
		m(1)=0
		return
	]
	pl"WARNING: SIZEofINT not set"
	exit
]

// this is a model for an app setup
test1 [           // create/print
	pl"test1";pl""
	create_galaxy m
	ps"created, galaxy portion: "
	pl"";ar2d_print m
	print_galaxy m
]

test2[            // setters/getters
	pl"test2";pl""
	create_galaxy m

	int sx,sy,cx,cy,val
	sx = random 0,2
	sy = random 0,2
	cx = random 0,2
	cy = random 0,2
	pn sx; pn sy; pn cx; pn cy
	ar4d_set 99,sx,sy,cx,cy,m
	print_galaxy m
	val = ar4d_val sx,sy,cx,cy,m
	pl"value retrieved is"; pn val
]

test3[            //trek galaxy format, but sectab data
	pl"test3";pl""
	create_galaxy m

	print_sectab m
	int x; x=3
	int y; y=0
]

test4[
	pl"test4";pl""
	create_galaxy m

	
]

// prints sector table in trek format 
// (proof of formatting, actual trek data would be in a separate ar2d)
print_sectab int mat(0)[
	int sx,sy
	while(sy<S)[
		sx=0
		while(sx<S)[
			int val
			val = ar2d_val(sx,sy,mat)
			printf "| %03d " ,val
			sx=sx+1
		]
		sy=sy+1
		ps"|"
		pl""
	]
]



testall[
	set_SIZEofINT
	pl"";test1
	pl"";test2
	pl"";test3
]

//------------  convenience technique
//		simple function names for frequently used
//		change the names to avoid conflict with app symbols
ms int x,r,c,m(0) [ar2d_set x,r,c,m]
mv int r,c,m(0)   [return ar2d_val r,c,m]
mp int m(0)       [ar2d_print m]

// Change which test(s) here, edit to specific test, or testall
main[
	S=3   // instead of 8
	ps "test all"; pl""
	testall
]
